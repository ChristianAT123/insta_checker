name: Instagram DMCA Link Checker

on:
  workflow_dispatch:
  schedule:
    - cron: "0 12 * * *"

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS }}
      PYTHONWARNINGS: ignore::DeprecationWarning

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-ms-playwright-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-ms-playwright-

      - name: Install Playwright browsers
        uses: microsoft/playwright-github-action@v1
        with:
          with-deps: true

      - name: Prepare Google credentials
        shell: bash
        run: |
          python - <<'PY'
          import os, json, base64, sys, pathlib
          val = (os.getenv("GOOGLE_CREDENTIALS") or "").strip()
          if not val:
              print("ERROR: GOOGLE_CREDENTIALS is empty", file=sys.stderr); sys.exit(1)
          if not val.lstrip().startswith("{"):
              try:
                  val = base64.b64decode(val).decode("utf-8")
              except Exception as e:
                  print("ERROR: Not JSON and base64 decode failed:", e, file=sys.stderr); sys.exit(1)
          try:
              obj = json.loads(val)
          except Exception as e:
              print("ERROR: credentials are not valid JSON:", e, file=sys.stderr); sys.exit(1)
          pathlib.Path("credentials.json").write_text(val, encoding="utf-8")
          print("Wrote credentials.json with keys:", ", ".join(sorted(obj.keys())))
          PY
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/credentials.json" >> "$GITHUB_ENV"

      - name: Run script
        run: python check_instagram_links.py
