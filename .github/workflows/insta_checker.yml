name: primary Logs sheet + daily @10pm ET

on:
  workflow_dispatch:
    inputs:
      shard_index:
        description: "Shard index (0-based)"
        required: true
        default: "0"
      total_shards:
        description: "Total shards"
        required: true
        default: "1"
      skip_recent_days:
        description: "Skip rows with Last Checked < N days old"
        required: true
        default: "0"
  schedule:
    # 10:00 PM US/Eastern == 02:00 UTC next day during EDT, 03:00 UTC during EST
    - cron: "0 3 * * *"

jobs:
  linkcheck:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright browsers (chromium only)
        run: |
          playwright install --with-deps chromium

      - name: Write Google credentials
        shell: python
        env:
          GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
        run: |
          import os, sys, json, base64, pathlib
          raw = (os.environ.get("GOOGLE_CREDENTIALS_JSON") or "").strip()
          if not raw:
            print("ERROR: GOOGLE_CREDENTIALS_JSON secret is empty.", file=sys.stderr)
            sys.exit(1)
          # accept raw JSON or base64-encoded JSON
          try:
            decoded = base64.b64decode(raw).decode("utf-8")
            obj = json.loads(decoded)
            raw = decoded
          except Exception:
            # not b64 â€“ assume plain JSON
            obj = json.loads(raw)
          pathlib.Path("credentials.json").write_text(raw, encoding="utf-8")
          print("Wrote credentials.json OK")

      - name: Assert hardened loader present
        shell: bash
        run: |
          if grep -n "from_json_keyfile_name" check_instagram_links.py; then
            echo "ERROR: old keyfile_name loader found; refusing to run."
            exit 1
          fi

      - name: Count current URLs in Logs!F
        id: count
        shell: python
        run: |
          import json, gspread, pathlib
          from oauth2client.service_account import ServiceAccountCredentials as S

          SHEET_ID = "1fFTIEDy-86lDaCgll1GkTq376hvrTd-DXulioXrDAgw"
          TAB = "Logs"
          URL_COL_INDEX_1BASED = 6  # F

          scope=["https://spreadsheets.google.com/feeds","https://www.googleapis.com/auth/drive"]
          creds = S.from_json_keyfile_dict(json.loads(pathlib.Path("credentials.json").read_text("utf-8")), scope)
          gc = gspread.authorize(creds)
          ws = gc.open_by_key(SHEET_ID).worksheet(TAB)
          col = ws.col_values(URL_COL_INDEX_1BASED)
          total = sum(1 for v in col[1:] if (v or "").strip())
          print(f"total={total}")

      - name: Run script
        env:
          SHARD_INDEX: ${{ github.event.inputs.shard_index || 0 }}
          TOTAL_SHARDS: ${{ github.event.inputs.total_shards || 1 }}
          SKIP_RECENT_DAYS: ${{ github.event.inputs.skip_recent_days || 0 }}
        run: python -u check_instagram_links.py
